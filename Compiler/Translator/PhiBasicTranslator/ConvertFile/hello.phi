phi.Hello:OS16BITVideo
{
	str hello: 'Hello, World!\r\n';
    str newline: '\r\n';
	
	log hello newline;
	log 'Press any key to continue...';
	
	call OS16BIT.WaitForKeyPress;
	
	call OS16BITVideo.EnableVideoMode;
	call OS16BIT.JumpToSectorTwo;
}

phi.Drawing:OS16BITSectorTwo
{

	int ScreenW: 320;
	int ScreenH: 200;
	
	byt testByte: 0;
	
	int ballspeed: 1;
	int ballspeedy: 1;
	
	int maxspeed: 8;
	int paddleSpeed: 2;
	
	int ballx: 160;
	int bally: 100;
	
	int ballyDir: 0;
	
	bln testBoolean: true;

	call OS16BIT.SetupInteruptTimer;
	call OS16BIT.SetupKeyboardInterupt;

	[OS16BIT.TimerEvent]

		testByte is Colors.Blue;

		call OS16BITVideo.DrawRectangle:
			0	0
			320	200	
			testByte
		;
		
		
		if ballspeed > maxspeed
			ballspeed is maxspeed;
		;;
		
		call OS16BITVideo.DrawRectangle:
			ballx	bally
			10	10	
			Colors.White
		;

	[end]
	
	
	
	[OS16BIT.KeyboardEvent]

		call key is OS16BIT.GetKey;

	[end]
	
}
